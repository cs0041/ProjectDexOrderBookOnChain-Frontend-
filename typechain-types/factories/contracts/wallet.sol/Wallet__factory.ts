/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Wallet,
  WalletInterface,
} from "../../../contracts/wallet.sol/Wallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balancesSpot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balancesTrade",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405162000ee438038062000ee483398181016040528101906100349190610128565b600160008190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610168565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100f5826100ca565b9050919050565b610105816100ea565b811461011057600080fd5b50565b600081519050610122816100fc565b92915050565b6000806040838503121561013f5761013e6100c5565b5b600061014d85828601610113565b925050602061015e85828601610113565b9150509250929050565b610d6c80620001786000396000f3fe608060405234801561001057600080fd5b506004361061004b5760003560e01c8062f714ce1461005057806312a2e5df1461006c5780636e553f651461009c578063d063db8d146100b8575b600080fd5b61006a60048036038101906100659190610875565b6100e8565b005b610086600480360381019061008191906108b5565b610409565b6040516100939190610904565b60405180910390f35b6100b660048036038101906100b19190610875565b61042e565b005b6100d260048036038101906100cd91906108b5565b61075d565b6040516100df9190610904565b60405180910390f35b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806101925750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6101d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c89061097c565b60405180910390fd5b6101d9610782565b6000831161021c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610213906109e8565b60405180910390fd5b82600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156102db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d290610a54565b60405180910390fd5b82600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103679190610aa3565b925050819055508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b81526004016103a9929190610ae6565b602060405180830381600087803b1580156103c357600080fd5b505af11580156103d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fb9190610b47565b506104046107d2565b505050565b6004602052816000526040600020602052806000526040600020600091509150505481565b80600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806104d85750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050e9061097c565b60405180910390fd5b61051f610782565b60008311610562576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055990610bc0565b60405180910390fd5b828273ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161059c9190610be0565b60206040518083038186803b1580156105b457600080fd5b505afa1580156105c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ec9190610c10565b101561062d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062490610a54565b60405180910390fd5b82600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106b99190610c3d565b925050819055508173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016106fd93929190610c93565b602060405180830381600087803b15801561071757600080fd5b505af115801561072b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074f9190610b47565b506107586107d2565b505050565b6003602052816000526040600020602052806000526040600020600091509150505481565b600260005414156107c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bf90610d16565b60405180910390fd5b6002600081905550565b6001600081905550565b600080fd5b6000819050919050565b6107f4816107e1565b81146107ff57600080fd5b50565b600081359050610811816107eb565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061084282610817565b9050919050565b61085281610837565b811461085d57600080fd5b50565b60008135905061086f81610849565b92915050565b6000806040838503121561088c5761088b6107dc565b5b600061089a85828601610802565b92505060206108ab85828601610860565b9150509250929050565b600080604083850312156108cc576108cb6107dc565b5b60006108da85828601610860565b92505060206108eb85828601610860565b9150509250929050565b6108fe816107e1565b82525050565b600060208201905061091960008301846108f5565b92915050565b600082825260208201905092915050565b7f696e76616c696420746f6b656e00000000000000000000000000000000000000600082015250565b6000610966600d8361091f565b915061097182610930565b602082019050919050565b6000602082019050818103600083015261099581610959565b9050919050565b7f63616e2774207769746864726177203000000000000000000000000000000000600082015250565b60006109d260108361091f565b91506109dd8261099c565b602082019050919050565b60006020820190508181036000830152610a01816109c5565b9050919050565b7f62616c616e6365206e6f742073756666696369656e7400000000000000000000600082015250565b6000610a3e60168361091f565b9150610a4982610a08565b602082019050919050565b60006020820190508181036000830152610a6d81610a31565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aae826107e1565b9150610ab9836107e1565b925082821015610acc57610acb610a74565b5b828203905092915050565b610ae081610837565b82525050565b6000604082019050610afb6000830185610ad7565b610b0860208301846108f5565b9392505050565b60008115159050919050565b610b2481610b0f565b8114610b2f57600080fd5b50565b600081519050610b4181610b1b565b92915050565b600060208284031215610b5d57610b5c6107dc565b5b6000610b6b84828501610b32565b91505092915050565b7f63616e2774206465706f73697420300000000000000000000000000000000000600082015250565b6000610baa600f8361091f565b9150610bb582610b74565b602082019050919050565b60006020820190508181036000830152610bd981610b9d565b9050919050565b6000602082019050610bf56000830184610ad7565b92915050565b600081519050610c0a816107eb565b92915050565b600060208284031215610c2657610c256107dc565b5b6000610c3484828501610bfb565b91505092915050565b6000610c48826107e1565b9150610c53836107e1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c8857610c87610a74565b5b828201905092915050565b6000606082019050610ca86000830186610ad7565b610cb56020830185610ad7565b610cc260408301846108f5565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610d00601f8361091f565b9150610d0b82610cca565b602082019050919050565b60006020820190508181036000830152610d2f81610cf3565b905091905056fea264697066735822122079c7fb5f991748d0b01c3650511ae0ced1c5e4fccfe2366ac6a6f134ba12e1b564736f6c63430008090033";

type WalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Wallet__factory extends ContractFactory {
  constructor(...args: WalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token0: PromiseOrValue<string>,
    _token1: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Wallet> {
    return super.deploy(_token0, _token1, overrides || {}) as Promise<Wallet>;
  }
  override getDeployTransaction(
    _token0: PromiseOrValue<string>,
    _token1: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token0, _token1, overrides || {});
  }
  override attach(address: string): Wallet {
    return super.attach(address) as Wallet;
  }
  override connect(signer: Signer): Wallet__factory {
    return super.connect(signer) as Wallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WalletInterface {
    return new utils.Interface(_abi) as WalletInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Wallet {
    return new Contract(address, _abi, signerOrProvider) as Wallet;
  }
}
